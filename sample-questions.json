{
  "questions": [
    {
      "title": "Two Sum",
      "description": "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\nInput: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].",
      "difficulty": "easy",
      "testCases": [
        {
          "input": "[2,7,11,15], 9",
          "expectedOutput": "[0,1]"
        },
        {
          "input": "[3,2,4], 6",
          "expectedOutput": "[1,2]"
        },
        {
          "input": "[3,3], 6",
          "expectedOutput": "[0,1]"
        }
      ]
    },
    {
      "title": "Reverse String",
      "description": "Write a function that reverses a string. The input string is given as an array of characters s.\n\nYou must do this by modifying the input array in-place with O(1) extra memory.\n\nExample:\nInput: s = ['h','e','l','l','o']\nOutput: ['o','l','l','e','h']",
      "difficulty": "easy",
      "testCases": [
        {
          "input": "['h','e','l','l','o']",
          "expectedOutput": "['o','l','l','e','h']"
        },
        {
          "input": "['H','a','n','n','a','h']",
          "expectedOutput": "['h','a','n','n','a','H']"
        }
      ]
    },
    {
      "title": "Palindrome Number",
      "description": "Given an integer x, return true if x is a palindrome, and false otherwise.\n\nA palindrome number is a number that reads the same backward as forward.\n\nExample:\nInput: x = 121\nOutput: true\nExplanation: 121 reads as 121 from left to right and from right to left.",
      "difficulty": "easy",
      "testCases": [
        {
          "input": "121",
          "expectedOutput": "true"
        },
        {
          "input": "-121",
          "expectedOutput": "false"
        },
        {
          "input": "10",
          "expectedOutput": "false"
        }
      ]
    },
    {
      "title": "Valid Parentheses",
      "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\n\nAn input string is valid if:\n1. Open brackets must be closed by the same type of brackets.\n2. Open brackets must be closed in the correct order.\n3. Every close bracket has a corresponding open bracket of the same type.\n\nExample:\nInput: s = '()'\nOutput: true\n\nInput: s = '()[]{}'\nOutput: true\n\nInput: s = '(]'\nOutput: false",
      "difficulty": "medium",
      "testCases": [
        {
          "input": "'()'",
          "expectedOutput": "true"
        },
        {
          "input": "'()[]{}'",
          "expectedOutput": "true"
        },
        {
          "input": "'(]'",
          "expectedOutput": "false"
        },
        {
          "input": "'([)]'",
          "expectedOutput": "false"
        },
        {
          "input": "'{[]}'",
          "expectedOutput": "true"
        }
      ]
    },
    {
      "title": "Merge Two Sorted Lists",
      "description": "You are given the heads of two sorted linked lists list1 and list2.\n\nMerge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.\n\nReturn the head of the merged linked list.\n\nExample:\nInput: list1 = [1,2,4], list2 = [1,3,4]\nOutput: [1,1,2,3,4,4]\n\nInput: list1 = [], list2 = []\nOutput: []\n\nInput: list1 = [], list2 = [0]\nOutput: [0]",
      "difficulty": "easy",
      "testCases": [
        {
          "input": "[1,2,4], [1,3,4]",
          "expectedOutput": "[1,1,2,3,4,4]"
        },
        {
          "input": "[], []",
          "expectedOutput": "[]"
        },
        {
          "input": "[], [0]",
          "expectedOutput": "[0]"
        }
      ]
    }
  ]
}
