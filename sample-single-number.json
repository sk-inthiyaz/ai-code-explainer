{
  "levelName": "Easy",
  "title": "Find Single Number",
  "description": "Given a non-empty array of integers nums, every element appears twice except for one element that appears only once. Find that single element.",
  "constraints": "1 <= nums.length <= 3*10^4\n-3*10^4 <= nums[i] <= 3*10^4\nEach element in the array appears twice except for one element which appears only once.",
  "hints": [
    "Think about the properties of XOR operation",
    "a ^ a = 0 and a ^ 0 = a",
    "XOR all numbers together"
  ],
  "functionSignature": {
    "name": "singleNumber",
    "params": ["nums"],
    "returnType": "int"
  },
  "codeTemplate": {
    "javascript": "/**\n * @param {number[]} nums\n * @return {number}\n */\nfunction singleNumber(nums) {\n    // Write your solution here\n}\n",
    "python": "class Solution:\n    def singleNumber(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        # Write your solution here\n        pass\n",
    "java": "class Solution {\n    public int singleNumber(int[] nums) {\n        // Write your solution here\n        \n    }\n}\n",
    "cpp": "class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        // Write your solution here\n        \n    }\n};\n"
  },
  "testCases": [
    {
      "input": "[2,2,1]",
      "expectedOutput": "1",
      "explanation": "1 appears once. 2 appears twice.",
      "isHidden": false
    },
    {
      "input": "[4,1,2,1,2]",
      "expectedOutput": "4",
      "explanation": "4 appears once. 1 and 2 appear twice.",
      "isHidden": false
    },
    {
      "input": "[1]",
      "expectedOutput": "1",
      "explanation": "Single element",
      "isHidden": true
    }
  ],
  "activeDate": "2025-10-23"
}
