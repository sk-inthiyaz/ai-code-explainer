{
  "levelName": "Easy",
  "title": "Two Sum",
  "description": "Given an array of integers nums and an integer target, return the indices of the two numbers that add up to target. You may assume that each input has exactly one solution, and you may not use the same element twice.",
  "constraints": "2 <= nums.length <= 10^4\n-10^9 <= nums[i] <= 10^9\n-10^9 <= target <= 10^9\nOnly one valid answer exists.",
  "hints": [
    "Use a hash map to store values you've seen",
    "For each number, check if (target - number) exists in the map",
    "If yes, return the indices"
  ],
  "functionSignature": {
    "name": "twoSum",
    "params": ["nums", "target"],
    "returnType": "array"
  },
  "codeTemplate": {
    "javascript": "/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nfunction twoSum(nums, target) {\n    // Write your solution here\n}\n",
    "python": "class Solution:\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        # Write your solution here\n        pass\n",
    "java": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        // Write your solution here\n        \n    }\n}\n",
    "cpp": "class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        // Write your solution here\n        \n    }\n};\n"
  },
  "testCases": [
    {
      "input": "[2,7,11,15]\n9",
      "expectedOutput": "[0,1]",
      "explanation": "nums[0] + nums[1] == 9, we return [0, 1]",
      "isHidden": false
    },
    {
      "input": "[3,2,4]\n6",
      "expectedOutput": "[1,2]",
      "explanation": "nums[1] + nums[2] == 6, we return [1, 2]",
      "isHidden": false
    },
    {
      "input": "[3,3]\n6",
      "expectedOutput": "[0,1]",
      "explanation": "Same element appears twice",
      "isHidden": true
    }
  ],
  "activeDate": "2025-10-23"
}
